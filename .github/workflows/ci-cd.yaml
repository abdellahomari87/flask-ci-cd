name: CI Pipeline with SonarCloud, Trivy & DockerHub

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    env:
      SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
      DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
      KUBECONFIG: ${{ secrets.KUBECONFIG }}
      aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
      aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      IMAGE_NAME: omari87/flask-ci-cd

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@v2
        with:
          projectBaseDir: .
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

      - name: Log in to DockerHub
        run: echo "${DOCKER_PASSWORD}" | docker login -u "${DOCKER_USERNAME}" --password-stdin

      - name: Build Docker image
        run: |
          docker build -t $IMAGE_NAME:latest .

      - name: Push Docker image to DockerHub
        run: |
          docker push $IMAGE_NAME:latest

      - name: Install Trivy
        run: |
          sudo apt-get install -y rpm
          curl -sfL https://raw.githubusercontent.com/aquasecurity/trivy/main/contrib/install.sh | sh -s -- -b /usr/local/bin

      - name: Récupérer le template HTML de Trivy
        run: |
          git clone --depth 1 https://github.com/aquasecurity/trivy.git
          cp trivy/contrib/html.tpl ./html.tpl

      - name: Scan Docker image avec Trivy
        run: |
          mkdir -p trivy-reports
          trivy image $IMAGE_NAME:latest \
            --format template \
            --template "@html.tpl" \
            -o trivy-reports/trivy-report.html
         
      - name: Upload Trivy Report
        uses: actions/upload-artifact@v4
        with:
          name: trivy-report
          path: trivy-reports/trivy-report.html
          
  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Install kubectl
        uses: azure/setup-kubectl@v3

      - name: Update kubeconfig
        run: aws eks update-kubeconfig --region us-east-1 --name my-eks-cluster

      - name: Deploy to EKS
        run: kubectl apply -f k8s/
